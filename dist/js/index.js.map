{"version":3,"sources":["../../lib/novel-support.js"],"names":[],"mappings":"AAKA,GAAM,cAAe,QAAf,aAAe,CAAC,IAAD,CAAuB,IAAhB,OAAgB,2DAAP,EAAO,CAE1C,GAAM,eAAgB,OAAO,OAAP,GAAmB,SAAnB,CAA+B,MAA/B,CAAwC,OAAO,OAArE,CACA,GAAM,YAAa,OAAO,IAAP,GAAgB,SAAhB,CAA4B,KAA5B,CAAoC,OAAO,IAA9D,CACA,GAAM,eAAgB,OAAO,OAAP,GAAmB,SAAnB,CAA+B,KAA/B,CAAuC,OAAO,OAApE,CACA,QAAQ,GAAR,CAAY,aAAZ,CAA2B,UAA3B,CAAuC,aAAvC,EAGA,GAAM,SAAU,6BAAhB,CACA,GAAM,UAAW,4BAAjB,CACA,GAAM,cAAe,yCAArB,CACA,QAAQ,GAAR,4FAA2C,aAA3C,iBAGA,GAAI,WAAJ,CACA,GAAI,mBAAJ,CACA,GAAI,gBAAkB,MAAtB,CAA8B,CAC5B,IAAM,SAAS,cAAT,CAAwB,IAAxB,EAA8B,WAApC,CACA,YAAc,IAAI,OAAJ,CAAY,cAAZ,CAA4B,OAA5B,EACI,OADJ,CACY,oBADZ,CACkC,QADlC,EAEI,OAFJ,CAEY,YAFZ,CAE0B,YAF1B,CAAd,CAGD,CALD,IAMK,IAAG,gBAAkB,MAArB,CAA6B,CAChC,IAAM,SAAS,cAAT,CAAwB,IAAxB,EAA8B,SAApC,CACA,YAAc,IAAI,OAAJ,CAAY,oBAAZ,CAAkC,QAAlC,EACI,OADJ,CACY,YADZ,CAC0B,YAD1B,CAAd,CAED,CAGD,SAAS,cAAT,CAAwB,IAAxB,EAA8B,SAA9B,CAA0C,WAA1C,CACD,CA9BD,CAgCA,OAAQ,YAAR","file":"index.js","sourcesContent":["/**\r\n * 小説投稿サイトで記述した文章をelemで指定したタグ内に入れることで、小説投稿サイトと同じように表示することができる関数式。\r\n * @param {string} elem\r\n * @param {object} option\r\n */\r\nconst novelSupport = (elem, option = {}) => {\r\n  // デフォルト引数（一部を上書きすると他がundefinedになるので、条件演算子で別途定義）\r\n  const optionContent = option.content === undefined ? 'text' : option.content;\r\n  const optionMark = option.mark === undefined ? 'dot' : option.mark;\r\n  const optionRewrite = option.rewrite === undefined ? false : option.rewrite;\r\n  console.log(optionContent, optionMark, optionRewrite);\r\n\r\n  // 各変数群\r\n  const txtBase = '<p class=\"ns_indent\">$1</p>';\r\n  const rubyBase = '<ruby>$1<rt>$2</rt></ruby>';\r\n  const emphasisBase = '<strong class=\"ns_emphasis\">$1</strong>';\r\n  console.log(`現在のnovel-support.jsのコンテンツ変換は${optionContent}です`);\r\n  \r\n  // すべての変換処理\r\n  let obj;\r\n  let replaceBody;\r\n  if (optionContent === 'text') {\r\n    obj = document.getElementById(elem).textContent;\r\n    replaceBody = obj.replace(/(.+?)[\\n\\r]/g, txtBase) //改行検知pタグ挿入\r\n                     .replace(/[\\|｜](.+?)《(.+?)》/g, rubyBase) //ルビ変換\r\n                     .replace(/《《(.+?)》》/g, emphasisBase); //圏点変換\r\n  }\r\n  else if(optionContent === 'html') {\r\n    obj = document.getElementById(elem).innerHTML;\r\n    replaceBody = obj.replace(/[\\|｜](.+?)《(.+?)》/g, rubyBase) //ルビ変換\r\n                     .replace(/《《(.+?)》》/g, emphasisBase); //圏点変換\r\n  }\r\n\r\n  // 処理した内容に書き換え\r\n  document.getElementById(elem).innerHTML = replaceBody;\r\n}\r\n\r\nexport {novelSupport};"]}